/**
 * File: ABOUT.txt
 *
 * Authors: Aaron Wolin, Devin Smith, Jason Fennell, Max Pflueger, and James
 * Brown
 * Harvey Mudd College, Claremont, CA 91711.
 * Sketchers 2006.
 * 
 * Use at your own risk.  This code is not maintained and not guaranteed to
 * work.
 * We take no responsibility for any harm this code may cause.
 */

Sketch is a collection of classes used to represent a sketch. This class
closely mimics the MIT XML data format.

The first of these classes is the Sketch class. A sketch represents the
entire drawing, and contains Shapes and Strokes. Sketch has many methods for
interacting with these sub-objects, such as adding Labels, 

Strokes are what the user inputs; they generally represent continuous arcs
drawn by the user. However, strokes may be fragmented (by the auto-fragmenter
or by hand-fragmentation tools) into Substrokes. By and large, you'll be
interacting with Substrokes instead of Strokes unless you're working on
fragmentation.

Substrokes contain points. Substrokes may be a member of any number of
Shapes, and must be a member of a single Stroke. Substrokes also contain
functions for transformation.

Shapes are the way that we represent labels. A shape may contain any number
of substrokes, and has a single label. Shapes also may contain other Shapes,
although to my knowledge, we do not currently have any code that uses this
ability. Shapes have functions for transformations.

Points are the atomic units of our Sketches. They represent a single, well,
point, with coordinates that are represented as single-precision floats (a
limitation of the MIT XML format). Points are transformed generally only
when their parent Substrokes are.

All of these classes contain much of their data in an "XmlAttrs" object
which represents the exact contents of the XML file.
