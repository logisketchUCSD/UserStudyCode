<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="mainMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolbarImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>120, 17</value>
  </metadata>
  <data name="toolbarImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADM
        DgAAAk1TRnQBSQFMAgEBBgEAAQkBAAEEAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wIAAqEBBApfAQQyAAKG
        Ct0BCQFfDQABoQFmAYYiAAFMAW4BvAYZBAkBXwoAAaEBAAGGARMBUgFKIgABdAFSAewHGQMJAV8LAAGG
        ARMBUgGaAXMjAAF0AVIB7AcZAgkBXwgAAaEBAAGGARMBUgGaAXMlAAF6AVIB7wG1ArsBtQMZAd0BXwMA
        AaEBrQGGAWYBbAGLAYYBFQFSAZoBcyYAAfIB9AG1AuIB9AH/AbUDGQFfAgABxwGLAZEBtAG1AbQBrgFs
        AVEBmgFzJwAB8wHdAeIBGQHiAv8B4gMZAV8BAAGhAYsBtQQJAbsBkQFsAXMoAAHzAbUB4gEJAeIC9AHi
        AQkCGQFfAQABzwGRBBkCCQG1Aa4B6igAAfQBvAHiAdwBGQLiARkBCQIZAV8BAAGuAbsCGQHzAhkCCQG0
        AYYoAAH0Af8BGQH/ARkB3AEZAbUDGQFfAQAB7AHwAfMB9AH/AfQBGQIJAbUBbCgAAfQB/wH0AQkCGQG1
        AfQDGQFfAQABtAEHAfQC/wH0AfMBGQEJAbQBZigABv8C9AEZAd0B1gFfAQABzwHvAfMC/wH0AhkBCQGR
        AYYoAAf/AfQBrgHbAbUBoQEAAaEBzwG8AvQB8wEZAQkBtQFsAaEoAAj/Aa4BtQGhAwABzwG0AQcCvAG7
        AZEBiwGnKQAECQG7A7UBrgGhBAABoQGnAs8BtAKuAadPAAKuCgABoQEEAV8CrgFfAqEEAAHsAXMB6wFt
        AeoBEgETARUBEQEQAQ8CDgQAAacBzwKuAYwFhgRmCAABiwG0AYsBrggAAaEBtQHdArUB3QGuAYYBZgGF
        AwAB7AEcAXkGMQEqAksBRAGFAwABzwHWAbUBhgFDAe8CBwG8ARMDhgFmBwABiwG1ARkBiwGuBwABoQEE
        AbUH3QFmAaECAAHsAXkBHAN6A1kBUwFSATEBSwFmAwABzwLWAbUB6gEVAewB8gHzAewDhgFmBQABrgGL
        AwkBkQFlAWYBrgUAAbUB3QEJB90BBAGFAaEBAAHsAXoBHAGZBHoDWQFTATEBRAGhAgABzwPWAeoBAAEV
        AvEB6wOGAWYDAAK1AbsBCQIZAeIBCQG7AZEBZQGuAwABoQG1AwkB1gGnAc8BtQIJAbUBCQFfAQAB7QGa
        AXkBHAGaBHoDWQFTAUsBZgIAAc8D1gTqAm0BzwGnAoYCAAG7ARkBCQEZAQkBrQHVArQBGQEJAbsBZgGu
        AgABoQGGAbUC1gGhAgABpwG1A9YBhgGhAe0CmgEcAZkGegJZAVIBEgGhAQABtQEJBNYBtQXPAa0BhgEA
        AbsEGQH0AbQBBAGmAxkBCQG7AWUCAAHPA9YBhgGhAwABzwLWAa4BoQEAARwBmgGgAZkBHAaaA3oBdAFm
        AQABtQHdAQkCzwKtAacChgGmAs8BhgEAAe8EGQH/AbsBXwGLAf8EGQGRAa4BAAG1A9YBZgGhAwABoQG1
        AtYBZgGhARwBmgKgBxwCcwLsAXMBAAG1Ad0BzwP/AfQB8wHxAfABCQGmAc8BhgEAAQcEGQH/AbUBBAGL
        Af8EGQEJAa4BAAGnAbQC1gGGAaEDAAGhAbUD1gGhARwEoAd6AXMEAAG1Ad0BzwT/AfQB8wHxAfABhgHP
        AYYBAAEHAvQCGQH/AbsBBAGLAf8EGQHdAa4CAAGGA9YBBAMAAaEBtQLWAc8BAAEcBaABegIcAe0BcwHs
        AXMEAAHWAd0BzwX/AfQB8wHxAYYBzwGMAQABvAH0Af8B9AH/AfIBhgFfAYYB/wMZAfQBGQHsAQABoQG1
        A9YBZgEEAqEBrgLWAYYBBAEAARwBmQSgARwBrgUAAa4CiwEAAdYB3QG1Bv8B9AHzAacBzwGuAQAB8AH0
        Af8B9AH/AfADtQH/AfQBGQL/AQkB7AIAAbUB1gG1AtYBzwEKAYYBtQPWAYYBoQGnBRwBrgYAAacBrgGL
        AQAB1gHdAdYH/wH0Aa0BZgGuAgAB8gX/AdwC/wH0A/8B7QUAAbUHzwG1Ac8BoQoAAa4BpwEAAaEB7QGn
        Aa4BAAEJAd0B1gj/Aa0CzwIAAvMD/wGLAV8BhgT/AbsFAAGhAbUCzwG0BM8BXwGhCwABpwHtAZEB7QGn
        AwADCQPWBbUDzwMAAfMB9AL/AbwBZgHvA/8B8QcAAacBtAGhAbUCzwG1Ac8BpycAAfIB9AT/AbwLAAGh
        AbUBzwKnAaEEAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/AQABgAEBAv8EAAGA
        AQEB/wHxBAABgAEBAf8BoQQAAYABAQH/AcEEAAHAAQEB/gGDBAAB4AEBAcABBwQAAeABAQGAAQ8EAAHg
        AQEBAAEfBAAB4AEBAQABHwQAAeABAQEAAR8EAAHgAQEBAAEfBAAB4AEBAQABHwQAAeABAQEAAR8EAAHg
        AQEBAAEfBAAB4AEDAYABPwQAAeABBwGAAX8EAAX/AT8B8AEPAQABBwGAAQEB/gEfAeABBwEAAQMBgAEB
        AfwBHwHAAQMBAAEDAYABAQHwAQcBwAEBAQABAQGAAQEBwAEDAYABAQEAAQEBgAEBAYABAQGBAYACAAGA
        AQEBAAEBAYEBwQIAAYABAQIAAYEBwAIAAYABAQIAAYEBwAEAAQcBgAEBAgACwQEAAQcBgAEBAgABgAEB
        AQAB+AGAAQECAAHAAQABAQH4AYABAQGAAQEB8AEBAf8BkAGAAQEBgAEDAeABAwH/AYMBgAEBAcABBwHw
        AQcE/wHwAR8B/AEPCw==
</value>
  </data>
</root>